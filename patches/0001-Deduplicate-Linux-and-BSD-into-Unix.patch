SPDX-License-Identifier: MIT OR CC0-1.0
SPDX-FileCopyrightText: 2022 dgcampea <59268455+dgcampea@users.noreply.github.com>

From a0ca8aa4a490784368797823f72b7adf6750dbfe Mon Sep 17 00:00:00 2001
From: dgcampea <59268455+dgcampea@users.noreply.github.com>
Date: Fri, 26 Feb 2021 14:00:11 +0000
Subject: [PATCH 1/2] Deduplicate Linux/ and BSD/ into Unix/ Install icons to
 correct location Add AppStream metadata file

---
 BSD/share/applications/sasm.desktop           |   9 -
 BSD/share/doc/sasm/changelog.gz               | Bin 1898 -> 0 bytes
 Linux/share/doc/sasm/copyright                |  29 -
 Linux/share/sasm/NASM/macro.c                 |   5 -
 Linux/share/sasm/Projects/FASMHello.asm       |  18 -
 Linux/share/sasm/Projects/FASMHellox64.asm    |  19 -
 Linux/share/sasm/Projects/GASHello.asm        |  15 -
 Linux/share/sasm/Projects/GASHellox64.asm     |  17 -
 Linux/share/sasm/Projects/NASMHello.asm       |  13 -
 Linux/share/sasm/Projects/NASMHellox64.asm    |  13 -
 Linux/share/sasm/include/io.inc               | 768 --------------
 Linux/share/sasm/include/io64.inc             | 994 ------------------
 Linux/share/sasm/keys.ini                     |  28 -
 Linux/share/sasm/sasm.png                     | Bin 17097 -> 0 bytes
 README.txt                                    |   2 +-
 SASM.pro                                      |  42 +-
 {Linux => Unix}/share/doc/sasm/changelog.gz   | Bin
 {BSD => Unix}/share/doc/sasm/copyright        |   0
 {BSD => Unix}/share/sasm/NASM/macro.c         |   0
 .../share/sasm/Projects/FASMHello.asm         |   0
 .../share/sasm/Projects/FASMHellox64.asm      |   0
 .../share/sasm/Projects/GASHello.asm          |   0
 .../share/sasm/Projects/GASHellox64.asm       |   0
 .../share/sasm/Projects/NASMHello.asm         |   0
 .../share/sasm/Projects/NASMHellox64.asm      |   0
 {BSD => Unix}/share/sasm/include/io.inc       |   0
 {BSD => Unix}/share/sasm/include/io64.inc     |   0
 {BSD => Unix}/share/sasm/keys.ini             |   0
 common.cpp                                    |  12 +-
 .../128x128/apps/io.github.dman95.SASM.png    | Bin
 .../io.github.dman95.SASM.desktop             |   4 +-
 res/io.github.dman95.SASM.metainfo.xml        |  41 +
 32 files changed, 65 insertions(+), 1964 deletions(-)
 delete mode 100644 BSD/share/applications/sasm.desktop
 delete mode 100644 BSD/share/doc/sasm/changelog.gz
 delete mode 100644 Linux/share/doc/sasm/copyright
 delete mode 100644 Linux/share/sasm/NASM/macro.c
 delete mode 100644 Linux/share/sasm/Projects/FASMHello.asm
 delete mode 100644 Linux/share/sasm/Projects/FASMHellox64.asm
 delete mode 100644 Linux/share/sasm/Projects/GASHello.asm
 delete mode 100644 Linux/share/sasm/Projects/GASHellox64.asm
 delete mode 100644 Linux/share/sasm/Projects/NASMHello.asm
 delete mode 100644 Linux/share/sasm/Projects/NASMHellox64.asm
 delete mode 100644 Linux/share/sasm/include/io.inc
 delete mode 100644 Linux/share/sasm/include/io64.inc
 delete mode 100644 Linux/share/sasm/keys.ini
 delete mode 100644 Linux/share/sasm/sasm.png
 rename {Linux => Unix}/share/doc/sasm/changelog.gz (100%)
 rename {BSD => Unix}/share/doc/sasm/copyright (100%)
 rename {BSD => Unix}/share/sasm/NASM/macro.c (100%)
 rename {BSD => Unix}/share/sasm/Projects/FASMHello.asm (100%)
 rename {BSD => Unix}/share/sasm/Projects/FASMHellox64.asm (100%)
 rename {BSD => Unix}/share/sasm/Projects/GASHello.asm (100%)
 rename {BSD => Unix}/share/sasm/Projects/GASHellox64.asm (100%)
 rename {BSD => Unix}/share/sasm/Projects/NASMHello.asm (100%)
 rename {BSD => Unix}/share/sasm/Projects/NASMHellox64.asm (100%)
 rename {BSD => Unix}/share/sasm/include/io.inc (100%)
 rename {BSD => Unix}/share/sasm/include/io64.inc (100%)
 rename {BSD => Unix}/share/sasm/keys.ini (100%)
 rename BSD/share/sasm/sasm.png => res/app/icons/hicolor/128x128/apps/io.github.dman95.SASM.png (100%)
 rename Linux/share/applications/sasm.desktop => res/io.github.dman95.SASM.desktop (50%)
 create mode 100644 res/io.github.dman95.SASM.metainfo.xml

diff --git a/BSD/share/applications/sasm.desktop b/BSD/share/applications/sasm.desktop
deleted file mode 100644
index 379c3f2..0000000
--- a/BSD/share/applications/sasm.desktop
+++ /dev/null
@@ -1,9 +0,0 @@
-[Desktop Entry]
-Name=SASM
-GenericName=SASM
-Comment=Simple crossplatform IDE for NASM, MASM, GAS and FASM assembly languages.
-Icon=/usr/local/share/sasm/sasm.png
-Exec=sasm
-Terminal=false
-Type=Application
-Categories=Qt;Development;IDE;
diff --git a/BSD/share/doc/sasm/changelog.gz b/BSD/share/doc/sasm/changelog.gz
deleted file mode 100644
index cec4e816c28fab073b6d11993aee07951dfdee85..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 1898
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

diff --git a/Linux/share/doc/sasm/copyright b/Linux/share/doc/sasm/copyright
deleted file mode 100644
index 845600b..0000000
--- a/Linux/share/doc/sasm/copyright
+++ /dev/null
@@ -1,29 +0,0 @@
-This work was made by:
-
-    Dmitriy Manushin <Dman1095@gmail.com> on Wed, 4 Sep 2013 01:04:42 +0400
-
-Upstream Author(s):
-
-    Dmitriy Manushin <Dman1095@gmail.com>
-
-Copyright:
-
-    Copyright (C) 2013 Dmitriy Manushin
-
-License:
-
-    This program is free software: you can redistribute it and/or modify
-    it under the terms of the GNU General Public License as published by
-    the Free Software Foundation, either version 3 of the License, or
-    (at your option) any later version.
-
-    This package is distributed in the hope that it will be useful,
-    but WITHOUT ANY WARRANTY; without even the implied warranty of
-    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-    GNU General Public License for more details.
-
-    You should have received a copy of the GNU General Public License
-    along with this program. If not, see <http://www.gnu.org/licenses/>.
-
-On Debian systems, the complete text of the GNU General
-Public License version 3 can be found in "/usr/share/common-licenses/GPL-3".
diff --git a/Linux/share/sasm/NASM/macro.c b/Linux/share/sasm/NASM/macro.c
deleted file mode 100644
index d73ccf7..0000000
--- a/Linux/share/sasm/NASM/macro.c
+++ /dev/null
@@ -1,5 +0,0 @@
-#include <stdio.h>
-#include <unistd.h>
-FILE *get_stdin(void) { return stdin; }
-FILE *get_stdout(void) { return stdout; }
-void sasm_replace_stdin(void) {dup2(open("input.txt",0),0);}
diff --git a/Linux/share/sasm/Projects/FASMHello.asm b/Linux/share/sasm/Projects/FASMHello.asm
deleted file mode 100644
index f340455..0000000
--- a/Linux/share/sasm/Projects/FASMHello.asm
+++ /dev/null
@@ -1,18 +0,0 @@
-format ELF
-
-section '.data' writeable
-    msg db 'Hello, world!', 0
-    formatStr db "%s", 0
-
-section '.text' executable
-public main
-extrn printf
-main:
-    mov ebp, esp; for correct debugging
-    push msg
-    push formatStr
-    call printf
-    add esp, 8
-    xor eax, eax
-    ret
-    
\ No newline at end of file
diff --git a/Linux/share/sasm/Projects/FASMHellox64.asm b/Linux/share/sasm/Projects/FASMHellox64.asm
deleted file mode 100644
index b57bd6c..0000000
--- a/Linux/share/sasm/Projects/FASMHellox64.asm
+++ /dev/null
@@ -1,19 +0,0 @@
-format ELF64
-
-section '.data' writeable
-    msg db 'Hello, world!', 0
-    formatStr db "%s", 0
-
-section '.text' executable
-public main
-extrn printf
-main:
-    mov rbp, rsp; for correct debugging
-    and rsp, -16
-    mov rdi, formatStr
-    mov rsi, msg
-    call printf
-    mov rsp, rbp
-    xor rax, rax
-    ret
-    
\ No newline at end of file
diff --git a/Linux/share/sasm/Projects/GASHello.asm b/Linux/share/sasm/Projects/GASHello.asm
deleted file mode 100644
index 98e7d90..0000000
--- a/Linux/share/sasm/Projects/GASHello.asm
+++ /dev/null
@@ -1,15 +0,0 @@
-.data
-msg:
-    .asciz "Hello, world!\n"
- 
-.extern printf
-.text
-    .global main # entry point
-main:
-    movl %esp, %ebp # for correct debugging
-    pushl $msg
-    call printf
-    addl $4, %esp
-    xorl %eax, %eax
-    ret
-    
\ No newline at end of file
diff --git a/Linux/share/sasm/Projects/GASHellox64.asm b/Linux/share/sasm/Projects/GASHellox64.asm
deleted file mode 100644
index 2209f89..0000000
--- a/Linux/share/sasm/Projects/GASHellox64.asm
+++ /dev/null
@@ -1,17 +0,0 @@
-.data
-msg:
-    .asciz "Hello, world!\n"
- 
-.extern printf
-.extern flush
-.text
-    .global main # entry point
-main:
-    movq %rsp, %rbp #for correct debugging
-    andq $-16, %rsp
-    movq $msg, %rdi
-    call printf
-    movq %rbp, %rsp
-    xorq %rax, %rax
-    ret
-    
\ No newline at end of file
diff --git a/Linux/share/sasm/Projects/NASMHello.asm b/Linux/share/sasm/Projects/NASMHello.asm
deleted file mode 100644
index 370ad00..0000000
--- a/Linux/share/sasm/Projects/NASMHello.asm
+++ /dev/null
@@ -1,13 +0,0 @@
-%include "io.inc"
-
-section .data
-    msg db 'Hello, world!', 0
-
-section .text
-    global CMAIN
-CMAIN:
-    mov ebp, esp
-    PRINT_STRING msg
-    NEWLINE
-    xor eax, eax
-    ret
\ No newline at end of file
diff --git a/Linux/share/sasm/Projects/NASMHellox64.asm b/Linux/share/sasm/Projects/NASMHellox64.asm
deleted file mode 100644
index 4aafaca..0000000
--- a/Linux/share/sasm/Projects/NASMHellox64.asm
+++ /dev/null
@@ -1,13 +0,0 @@
-%include "io64.inc"
-
-section .data
-    msg db 'Hello, world!', 0
-
-section .text
-    global CMAIN
-CMAIN:
-    mov rbp, rsp
-    PRINT_STRING msg
-    NEWLINE
-    xor rax, rax
-    ret
\ No newline at end of file
diff --git a/Linux/share/sasm/include/io.inc b/Linux/share/sasm/include/io.inc
deleted file mode 100644
index 1d18e5b..0000000
--- a/Linux/share/sasm/include/io.inc
+++ /dev/null
@@ -1,768 +0,0 @@
-%ifndef IO_SYS
-%define IO_SYS
-
-%macro sasmMacroFunc 0.nolist ;func for debug
-    %push sasmMacroFunc
-    call %$sasmMacro
-    jmp %$sasmMacroE
-    %$sasmMacro:
-    jmp %%after_data
-section .data
-    %$sasmRetAddr dd 0
-section .text
-    %%after_data:
-    push ebx
-    mov ebx, dword[esp + 4]
-    mov dword[%$sasmRetAddr], ebx
-    mov ebx, dword[esp]
-    mov dword[esp + 4], ebx
-    pop ebx
-    pop ebx
-%endmacro
-
-%macro sasmMacroFuncE 0.nolist ;exit
-    push dword[%$sasmRetAddr]
-    ret
-    %$sasmMacroE:
-    %pop
-%endmacro
-
-%macro CEXTERN 1.nolist
-    extern %1
-%endmacro
-%define CMAIN main
-
-CEXTERN printf
-CEXTERN scanf
-CEXTERN putchar
-CEXTERN fgets
-CEXTERN puts
-CEXTERN fputs
-CEXTERN fflush
-
-CEXTERN get_stdin
-CEXTERN get_stdout
-
-; Make stack be 16 bytes aligned after pushing %1 bytes
-%macro ALIGN_STACK 1.nolist
-    enter 0, 0
-    sub esp, %1
-    and esp, 0xfffffff0
-    add esp, %1
-%endmacro
-
-%macro UNALIGN_STACK 0.nolist
-    leave
-%endmacro
-
-%macro FFLUSH_STDOUT 0.nolist
-    ALIGN_STACK 4
-    call get_stdout
-    push eax
-    call fflush
-    UNALIGN_STACK
-%endmacro
-
-%macro IS_GPR 1.nolist
-    %push IS_GPR
-    %assign %$is_reg 0
-    %assign %$reg_size 1
-    %ifidni %1, ah
-        %assign %$is_reg 1
-    %elifidni %1, al
-        %assign %$is_reg 1
-    %elifidni %1, bl
-        %assign %$is_reg 1
-    %elifidni %1, bh
-        %assign %$is_reg 1
-    %elifidni %1, cl
-        %assign %$is_reg 1
-    %elifidni %1, ch
-        %assign %$is_reg 1
-    %elifidni %1, dl
-        %assign %$is_reg 1
-    %elifidni %1, dh
-        %assign %$is_reg 1
-    %elifidni %1, ax
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, bx
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, cx
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, dx
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, sp
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, bp
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, si
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, di
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, eax
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, ebx
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, ecx
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, edx
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, esp
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, ebp
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, esi
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, edi
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %endif
-%endmacro
-
-
-%macro PRINT_STRING 1.nolist
-    sasmMacroFunc
-    IS_GPR %1
-    %if %$is_reg = 1
-    %error "Register as parameter is not supported"
-    %endif
-    %pop
-
-%ifid %1
-; variable
-    pushf
-    push edx
-    push ecx
-    push eax	
-
-    ALIGN_STACK 0
-    call get_stdout
-    UNALIGN_STACK
-    ALIGN_STACK 8
-    push eax 
-    push %1
-
-%elifstr %1
-; string literal
-    pushf
-    push edx
-    push ecx
-    push eax	
-
-    jmp %%after_str
-    %%str	db	%1, 0
-%%after_str:	
-    ALIGN_STACK 0
-    call get_stdout
-    UNALIGN_STACK
-    ALIGN_STACK 8
-    push eax
-    push %%str
-
-%else
-; address expression
-    jmp %%after_data
-section .data
-    %%tmp dd 0
-section .text
-%%after_data:
-    mov dword [%%tmp], edi
-    lea edi, %1
-
-    pushf
-    push edx
-    push ecx
-    push eax
-
-    ALIGN_STACK 0
-    call get_stdout
-    UNALIGN_STACK
-    ALIGN_STACK 8
-    push eax
-    push edi
-
-    mov edi, dword [%%tmp]
-    
-%endif
-
-    call fputs
-    UNALIGN_STACK
-    FFLUSH_STDOUT
-    pop eax
-    pop ecx
-    pop edx
-    popf
-    sasmMacroFuncE
-%endmacro
-
-%macro NEWLINE 0.nolist
-    PRINT_STRING `\n`
-%endmacro
-
-; size baseformatletter ("d", "u", "x") varname (%%fmt)
-%macro ___MAKE_FORMAT_STR 3.nolist
-    jmp %%after_fmt
-    %if %1 = 1
-        %strcat fmts "%hh" %2
-        
-    %elif %1 = 2
-        %strcat fmts "%h" %2
-    %elif %1 = 4
-        %strcat fmts "%" %2
-    %else
-        %error "Expected numeric constant 1, 2 or 4 as 1st argument"
-    %endif
-    %3 db fmts, 0
-    %%after_fmt:
-%endmacro
-
-; size data baseformatletter ("d", "u", "x") signextendinst (movzx, movsx)
-%macro ___PRINT_NUM_COMMON 4.nolist
-    ___MAKE_FORMAT_STR %1, %3, %%fmt
-        
-    jmp %%after_data
-section .data
-    %%tmp dd 0
-
-section .text
-%%after_data:
-
-    IS_GPR %2
-
-%if %$is_reg = 1
-; register
-
-    mov dword [%%tmp], eax    ; may be register is esp, need to take care
-
-    %if %$reg_size = 1
-        %4 eax, %2
-    %elif %$reg_size = 2
-        %4 eax, %2
-    %else ; %$reg_size = 4
-        mov eax, %2
-    %endif
-
-    pushf
-    push dword [%%tmp] ; eax
-    push ecx
-    push edx
-
-    ALIGN_STACK 8
-    push eax
-
-%elifid %2
-; variable (hope so)
-    pushf
-    push eax
-    push ecx
-    push edx
-    
-%if %1 = 1
-    %4 eax, byte [%2]
-%elif %1 = 2
-    %4 eax, word [%2]
-%else ; %1 = 4
-    mov eax, dword [%2]
-%endif
-
-    ALIGN_STACK 8
-    push eax
-
-%elifnum %2
-    pushf
-    push eax
-    push ecx
-    push edx
-
-    ALIGN_STACK 8
-    push %2
-%elifstr %2
-    pushf
-    push eax
-    push ecx
-    push edx
-
-    ALIGN_STACK 8
-    push %2
-
-%else
-; may be, address expression?
-    
-    mov dword [%%tmp], eax    ; may use register esp, need to take care
-
-    %if %1 = 1
-        %4 eax, byte %2
-    %elif %1 = 2
-        %4 eax, word %2
-    %else ; %1 = 4
-        mov eax, dword %2
-    %endif
-
-    pushf
-    push dword [%%tmp] ; eax
-    push ecx
-    push edx
-
-    ALIGN_STACK 8
-    push eax
-
-%endif
-
-    push %%fmt
-    call printf
-    UNALIGN_STACK
-    FFLUSH_STDOUT
-
-    pop edx
-    pop ecx
-    pop eax
-    popf    
-
-    %pop ; IS_REG
-    
-%endmacro
-
-%macro PRINT_DEC 2.nolist
-    sasmMacroFunc
-    ___PRINT_NUM_COMMON %1, %2, "d", movsx
-    sasmMacroFuncE
-%endmacro
-
-%macro PRINT_UDEC 2.nolist
-    sasmMacroFunc
-    ___PRINT_NUM_COMMON %1, %2, "u", movzx
-    sasmMacroFuncE
-%endmacro
-
-%macro PRINT_HEX 2.nolist
-    sasmMacroFunc
-    ___PRINT_NUM_COMMON %1, %2, "x", movzx
-    sasmMacroFuncE
-%endmacro
-
-%macro PRINT_CHAR 1.nolist
-    sasmMacroFunc
-
-    jmp %%after_data
-section .data
-    %%tmp dd 0
-
-section .text
-%%after_data:
-
-    IS_GPR %1
-
-%if %$is_reg = 1
-; register
-
-    mov dword [%%tmp], eax    ; may be register is esp, need to take care
-
-    %if %$reg_size = 1
-        movzx eax, %1
-    %elif %$reg_size = 2
-        movzx eax, %1
-    %else ; %$reg_size = 4
-        mov eax, %1
-    %endif
-
-    pushf
-    push dword [%%tmp] ; eax
-    push ecx
-    push edx
-
-    and eax, 0xff
-    ALIGN_STACK 4
-    push eax
-
-%elifid %1
-; variable (hope so)
-    pushf
-    push eax
-    push ecx
-    push edx
-
-    movzx eax, byte [%1]
-    ALIGN_STACK 4    
-    push eax
-
-%elifnum %1
-    pushf
-    push eax
-    push ecx
-    push edx
-
-    ALIGN_STACK 4
-    push (%1 & 0xff)
-%elifstr %1
-    pushf
-    push eax
-    push ecx
-    push edx
-
-; string; select only 1st byte
-%substr tstr %1 1
-    ALIGN_STACK 4
-    push tstr
-
-%else
-; may be, address expression?
-    
-    mov dword [%%tmp], eax    ; may use register esp, need to take care
-
-    movzx eax, byte %1
-
-    pushf
-    push dword [%%tmp] ; eax
-    push ecx
-    push edx
-
-    ALIGN_STACK 4
-    push eax
-
-%endif
-
-    call putchar
-    UNALIGN_STACK
-    FFLUSH_STDOUT
-
-    pop edx
-    pop ecx
-    pop eax
-    popf    
-
-    %pop ; IS_REG
-    sasmMacroFuncE
-%endmacro
-
-
-; size data baseformatletter ("d", "u", "x") signextendinst (movzx, movsx)
-%macro ___GET_NUM_COMMON 4.nolist
-
-    ___MAKE_FORMAT_STR %1, %3, %%fmt
-        
-    jmp %%after_data
-section .data
-    %%tmp dd 0
-    %%read_tmp dd 0
-
-section .text
-%%after_data:
-
-    IS_GPR %2
-
-%if %$is_reg = 1
-; register
-
-    %ifidni %2, esp
-        %error "Won't read to esp!" 
-    %elifidni %2, sp
-        %error "Won't read to sp!" 
-    %endif
-
-    %if %$reg_size < %1
-        %error "Too small register for requested data"
-    %endif
-
-    pushf
-    push eax
-    push ecx
-    push edx
-
-; we will have to do postprocessing after scanf
-    ALIGN_STACK 8
-    push %%read_tmp
-
-%elifid %2
-; variable (hope so)
-    pushf
-    push eax
-    push ecx
-    push edx
-
-    ALIGN_STACK 8    
-    push %2
-%elifnum %2
-    %error "Incorrect parameter (number)"
-%elifstr %2
-    %error "Incorrect parameter (string)"
-%else
-; may be, address expression?
-    
-    mov dword [%%tmp], eax    ; may use register esp, need to take care
-
-    lea eax, %2
-
-    pushf
-    push dword [%%tmp] ; eax
-    push ecx
-    push edx
-
-    ALIGN_STACK 8
-    push eax
-%endif
-
-    push %%fmt
-    call scanf
-    UNALIGN_STACK
-
-    pop edx
-    pop ecx
-    pop eax
-    popf    
-
-%if %$is_reg = 1
-; register postprocessing
-
-%if %$reg_size = %1
-    mov %2, [%%read_tmp]
-%else ; extend bytes 1 -> 2, 1 -> 4, 2 -> 4
-    %if %1 = 1
-        %4 %2, byte [%%read_tmp]
-    %else ; 2 -> 4
-        %4 %2, word [%%read_tmp]
-    %endif
-%endif
-
-%endif
-
-    %pop ; IS_REG
-%endmacro
-
-%macro GET_HEX 2.nolist
-    sasmMacroFunc
-    ___GET_NUM_COMMON %1, %2, "x", movzx
-    sasmMacroFuncE
-%endmacro
-
-%macro GET_DEC 2.nolist
-    sasmMacroFunc
-    ___GET_NUM_COMMON %1, %2, "d", movsx
-    sasmMacroFuncE
-%endmacro
-
-%macro GET_UDEC 2.nolist
-    sasmMacroFunc
-    ___GET_NUM_COMMON %1, %2, "u", movzx
-    sasmMacroFuncE
-%endmacro
-
-
-%macro GET_CHAR 1.nolist
-    sasmMacroFunc
-
-    jmp %%after_data
-section .data
-    %%fmt db "%c", 0
-    %%tmp dd 0
-    %%read_tmp db 0
-
-section .text
-%%after_data:
-
-    IS_GPR %1
-
-%if %$is_reg = 1
-; register
-
-    %ifidni %1, esp
-        %error "Won't read to esp!" 
-    %elifidni %1, sp
-        %error "Won't read to sp!" 
-    %elifidni %1, spl
-        %error "Won't read to spl!" 
-    %endif
-
-    pushf
-    push eax
-    push ecx
-    push edx
-
-    ALIGN_STACK 8
-; we will have to do postprocessing after scanf
-    push %%read_tmp
-
-%elifid %1
-; variable (hope so)
-    pushf
-    push eax
-    push ecx
-    push edx
-
-    ALIGN_STACK 8
-    push %1
-    
-%elifnum %1
-    %error "Incorrect parameter (number)"
-%elifstr %1
-    %error "Incorrect parameter (string)"
-%else
-; may be, address expression?
-    
-    mov dword [%%tmp], eax    ; may use register esp, need to take care
-
-    lea eax, %1
-
-    pushf
-    push dword [%%tmp] ; eax
-    push ecx
-    push edx
-
-    ALIGN_STACK 8
-    push eax
-%endif
-
-    push %%fmt
-    call scanf
-    UNALIGN_STACK
-
-    pop edx
-    pop ecx
-    pop eax
-    popf    
-
-%if %$is_reg = 1
-; register postprocessing
-
-%if %$reg_size = 1
-    mov %1, byte [%%read_tmp]
-%else ; zero extend bytes 1 -> 2, 1 -> 4
-    movzx %1, byte [%%read_tmp]
-%endif
-
-%endif
-
-    %pop ; IS_REG
-    sasmMacroFuncE
-%endmacro
-
-
-%macro GET_STRING 2.nolist
-    sasmMacroFunc
-
-    IS_GPR %1
-
-%if %$is_reg = 1
-    %error "Incorrect 1st parameter (register)"
-%endif
-    
-
-    %pop
-
-    IS_GPR %2
-
-%if %$is_reg = 1
-    ;
-%elifnum %2
-    %if %2 <= 0
-        %error "Second parameter must be positive"
-    %endif
-%else  
-    %error "Second parameter must be numeric constant or register"
-%endif
-
-    %pop
-
-%ifid %1
-; variable (hope so)
-    push esi
-    ;count
-    IS_GPR %2
-    %if %$is_reg = 1 
-        %if %$reg_size = 1
-            movzx esi, %2
-        %elif %$reg_size = 2
-            movzx esi, %2
-        %else ; %$reg_size = 4
-            mov esi, %2
-        %endif
-    %else
-        mov esi, %2
-    %endif
-    %pop
-    
-    pushf
-    push eax
-    push ecx
-    push edx
-    ALIGN_STACK 0
-    call get_stdin
-    UNALIGN_STACK
-    ALIGN_STACK 12
-    push eax
-    push esi ; count
-    push %1
-%elifnum %1
-    %error "Incorrect 1st parameter (number)"
-%elifstr %1
-    %error "Incorrect 1st parameter (string)"
-%else
-; may be, address expression?
-    
-    jmp %%after_data
-section .data
-    %%tmp dd 0
-section .text
-%%after_data:
-
-    ; may use register esp, need to take care
-    mov dword [%%tmp], edi
-    lea edi, %1
-    
-    push esi
-    ;count
-    IS_GPR %2
-    %if %$is_reg = 1 
-        %if %$reg_size = 1
-            movzx esi, %2
-        %elif %$reg_size = 2
-            movzx esi, %2
-        %else ; %$reg_size = 4
-            mov esi, %2
-        %endif
-    %else
-        mov esi, %2
-    %endif
-    %pop
-
-    pushf
-    push eax
-    push ecx
-    push edx
-    ALIGN_STACK 0
-    call get_stdin
-    UNALIGN_STACK
-    ALIGN_STACK 12
-    push eax    
-    push esi ; count
-    push edi
- 
-    mov edi, dword [%%tmp]
-%endif
-
-    call fgets
-    UNALIGN_STACK
-
-    pop edx
-    pop ecx
-    pop eax
-    popf
-    pop esi
-    sasmMacroFuncE
-%endmacro
-%endif
-
diff --git a/Linux/share/sasm/include/io64.inc b/Linux/share/sasm/include/io64.inc
deleted file mode 100644
index a65814a..0000000
--- a/Linux/share/sasm/include/io64.inc
+++ /dev/null
@@ -1,994 +0,0 @@
-%ifndef IO_SYS
-%define IO_SYS
-%assign sasmMacroCount 0
-
-%macro sasmMacroFunc 0.nolist ;func for debug
-    %push sasmMacroFunc
-    call %$sasmMacro
-    jmp %$sasmMacroE
-    %$sasmMacro:
-    jmp %%after_data
-section .data
-    %$sasmRetAddr dq 0
-section .text
-    %%after_data:
-    push rbx
-    mov rbx, qword[rsp + 8]
-    mov qword[%$sasmRetAddr], rbx
-    mov rbx, qword[rsp]
-    mov qword[rsp + 8], rbx
-    pop rbx
-    pop rbx
-%endmacro
-
-%macro sasmMacroFuncE 0.nolist ;exit
-    push qword[%$sasmRetAddr]
-    ret
-    %$sasmMacroE:
-    %pop
-%endmacro
-
-%macro CEXTERN 1.nolist
-    extern %1
-%endmacro
-%define CMAIN main
-
-CEXTERN printf
-CEXTERN scanf
-CEXTERN putchar
-CEXTERN fgets
-CEXTERN puts
-CEXTERN fputs
-CEXTERN fflush
-
-CEXTERN get_stdin
-CEXTERN get_stdout
-
-; Make stack be 16 bytes aligned
-%macro ALIGN_STACK 0.nolist
-    enter 0, 0
-    and rsp, 0xfffffffffffffff0
-%endmacro
-
-%macro UNALIGN_STACK 0.nolist
-    leave
-%endmacro
-
-%macro FFLUSH_STDOUT 0.nolist
-    ALIGN_STACK
-    call get_stdout
-    mov rdi, rax
-    call fflush
-    UNALIGN_STACK
-%endmacro
-
-%macro IS_GPR 1.nolist
-    %push IS_GPR
-    %assign %$is_reg 0
-    %assign %$reg_size 1
-    %ifidni %1, ah
-        %assign %$is_reg 1
-    %elifidni %1, al
-        %assign %$is_reg 1
-    %elifidni %1, bl
-        %assign %$is_reg 1
-    %elifidni %1, bh
-        %assign %$is_reg 1
-    %elifidni %1, cl
-        %assign %$is_reg 1
-    %elifidni %1, ch
-        %assign %$is_reg 1
-    %elifidni %1, dl
-        %assign %$is_reg 1
-    %elifidni %1, dh
-        %assign %$is_reg 1
-    %elifidni %1, spl
-        %assign %$is_reg 1
-    %elifidni %1, bpl
-        %assign %$is_reg 1
-    %elifidni %1, dil
-        %assign %$is_reg 1
-    %elifidni %1, sil
-        %assign %$is_reg 1
-    %elifidni %1, ax
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, bx
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, cx
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, dx
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, sp
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, bp
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, si
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, di
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, eax
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, ebx
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, ecx
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, edx
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, esp
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, ebp
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, esi
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, edi
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, rax
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, rbx
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, rcx
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, rdx
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, rsp
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, rbp
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, rsi
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, rdi
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, r8
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, r9
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, r10
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, r11
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, r12
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, r13
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, r14
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, r15
-        %assign %$is_reg 1
-        %assign %$reg_size 8
-    %elifidni %1, r8d
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, r9d
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, r10d
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, r11d
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, r12d
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, r13d
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, r14d
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, r15d
-        %assign %$is_reg 1
-        %assign %$reg_size 4
-    %elifidni %1, r8w
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, r9w
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, r10w
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, r11w
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, r12w
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, r13w
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, r14w
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, r15w
-        %assign %$is_reg 1
-        %assign %$reg_size 2
-    %elifidni %1, r8b
-        %assign %$is_reg 1
-        %assign %$reg_size 1
-    %elifidni %1, r9b
-        %assign %$is_reg 1
-        %assign %$reg_size 1
-    %elifidni %1, r10b
-        %assign %$is_reg 1
-        %assign %$reg_size 1
-    %elifidni %1, r11b
-        %assign %$is_reg 1
-        %assign %$reg_size 1
-    %elifidni %1, r12b
-        %assign %$is_reg 1
-        %assign %$reg_size 1
-    %elifidni %1, r13b
-        %assign %$is_reg 1
-        %assign %$reg_size 1
-    %elifidni %1, r14b
-        %assign %$is_reg 1
-        %assign %$reg_size 1
-    %elifidni %1, r15b
-        %assign %$is_reg 1
-        %assign %$reg_size 1
-    %endif
-%endmacro
-
-%macro PRINT_STRING 1.nolist
-    sasmMacroFunc
-    IS_GPR %1
-    %if %$is_reg = 1
-        %error "Register as parameter is not supported"
-    %endif
-    %pop
-%ifid %1
-; variable
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    ALIGN_STACK
-    call get_stdout
-    mov rdi, %1
-    mov rsi, rax
-%elifstr %1
-; string literal
-    jmp %%after_str
-section .data
-    %%str db %1, 0
-section .text
-    %%after_str:
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    ALIGN_STACK
-    call get_stdout
-    mov rdi, %%str
-    mov rsi, rax
-%else
-; address expression
-    jmp %%after_data
-section .data
-    %%tmp dq 0
-section .text
-    %%after_data:
-    mov qword[%%tmp], rbx
-    lea rbx, %1
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    ALIGN_STACK
-    call get_stdout
-    mov rdi, rbx
-    mov rsi, rax
-    mov rbx, qword[%%tmp]
-%endif
-    call fputs
-    UNALIGN_STACK
-    FFLUSH_STDOUT
-    pop rdi
-    pop rsi
-    pop r11
-    pop r10
-    pop r9
-    pop r8
-    pop rdx
-    pop rcx
-    pop rax
-    popfq
-    sasmMacroFuncE
-%endmacro
-
-%macro NEWLINE 0.nolist
-    PRINT_STRING `\n`
-%endmacro
-
-; size baseformatletter ("d", "u", "x") varname (%%fmt)
-%macro ___MAKE_FORMAT_STR 3.nolist
-    jmp %%after_fmt
-    %if %1 = 1
-        %strcat fmts "%hh" %2
-    %elif %1 = 2
-        %strcat fmts "%h" %2
-    %elif %1 = 4
-        %strcat fmts "%" %2
-    %elif %1 = 8
-        %strcat fmts "%ll" %2
-    %else
-        %error "Expected numeric constant 1, 2, 4 or 8 as 1st argument"
-    %endif
-    %3 db fmts, 0
-    %%after_fmt:
-%endmacro
-
-; size data baseformatletter ("d", "u", "x") signextendinst (movzx, movsx)
-%macro ___PRINT_NUM_COMMON 4.nolist
-    ___MAKE_FORMAT_STR %1, %3, %%fmt
-    IS_GPR %2
-%if %$is_reg = 1
-; register
-    jmp %%after_data
-section .data
-    %%tmp dq 0
-section .text
-    %%after_data:
-    mov qword[%%tmp], rax    
-    %if %$reg_size = 1
-        %4 rax, %2
-    %elif %$reg_size = 2
-        %4 rax, %2
-    %elif %$reg_size = 4
-        movsx rax, %2
-        %ifidni %4, movzx
-            pushfq
-            shl rax, 32
-            shr rax, 32
-            popfq
-        %endif
-    %else ; %$reg_size = 8
-        mov rax, %2
-    %endif
-    pushfq
-    push qword[%%tmp] ;rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    ALIGN_STACK
-    mov rsi, rax
-%elifid %2
-; variable (hope so)
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    %if %1 = 1
-        %4 rax, byte [%2]
-    %elif %1 = 2
-        %4 rax, word [%2]
-    %elif %1 = 4
-        movsx rax, dword [%2]
-        %ifidni %4, movzx
-            pushfq
-            shl rax, 32
-            shr rax, 32
-            popfq
-        %endif
-    %else ; %1 = 8
-        mov rax, qword [%2]
-    %endif
-    mov rsi, rax
-    ALIGN_STACK
-%elifnum %2
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    mov rsi, %2
-    ALIGN_STACK
-%elifstr %2
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    mov rsi, %2
-    ALIGN_STACK
-%else
-; may be, address expression?
-jmp %%after_data
-section .data
-    %%tmp dq 0
-section .text
-    %%after_data:
-    mov qword[%%tmp], rax
-    %if %1 = 1
-        %4 rax, byte %2
-    %elif %1 = 2
-        %4 rax, word %2
-    %elif %1 = 4
-        movsx rax, dword %2
-        %ifidni %4, movzx
-            pushfq
-            shl rax, 32
-            shr rax, 32
-            popfq
-        %endif
-    %else ; %1 = 8
-        mov rax, qword %2
-    %endif
-    pushfq
-    push qword[%%tmp] ;rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    ALIGN_STACK
-    mov rsi, rax
-%endif
-    mov rdi, %%fmt
-    call printf
-    UNALIGN_STACK
-    FFLUSH_STDOUT
-    pop rdi
-    pop rsi
-    pop r11
-    pop r10
-    pop r9
-    pop r8
-    pop rdx
-    pop rcx
-    pop rax
-    popfq 
-    %pop ; IS_REG    
-%endmacro
-
-%macro PRINT_DEC 2.nolist
-    sasmMacroFunc
-    ___PRINT_NUM_COMMON %1, %2, "d", movsx
-    sasmMacroFuncE
-%endmacro
-
-%macro PRINT_UDEC 2.nolist
-    sasmMacroFunc
-    ___PRINT_NUM_COMMON %1, %2, "u", movzx
-    sasmMacroFuncE
-%endmacro
-
-%macro PRINT_HEX 2.nolist
-    sasmMacroFunc
-    ___PRINT_NUM_COMMON %1, %2, "x", movzx
-    sasmMacroFuncE
-%endmacro
-
-%macro PRINT_CHAR 1.nolist
-    sasmMacroFunc
-    IS_GPR %1
-%if %$is_reg = 1
-; register
-    jmp %%after_data
-section .data
-    %%tmp dq 0
-section .text
-    %%after_data:
-    mov qword[%%tmp], rax    
-    %if %$reg_size = 1
-        movzx rax, %1
-    %elif %$reg_size = 2
-        movzx rax, %1
-    %elif %$reg_size = 4
-        movsx rax, %1
-        pushfq
-        shl rax, 32
-        shr rax, 32
-        popfq
-    %else ; %$reg_size = 8
-        mov rax, %1
-    %endif
-    pushfq
-    push qword[%%tmp] ;rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    and rax, 0xff
-    mov rdi, rax
-    ALIGN_STACK
-%elifid %1
-; variable (hope so)
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    movzx rax, byte [%1]
-    mov rdi, rax
-    ALIGN_STACK
-%elifnum %1
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    mov rdi, %1
-    and rdi, 0xff
-    ALIGN_STACK
-%elifstr %1
-; string select only 1st byte
-%substr tstr %1 1
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    mov rdi, tstr
-    ALIGN_STACK
-%else
-; may be, address expression?
-    jmp %%after_data
-section .data
-    %%tmp dq 0
-section .text
-    %%after_data:
-    mov qword[%%tmp], rax
-    movzx rax, byte %1
-    pushfq
-    push qword[%%tmp] ;rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    mov rdi, rax
-    ALIGN_STACK
-%endif
-    call putchar
-    UNALIGN_STACK
-    FFLUSH_STDOUT
-    pop rdi
-    pop rsi
-    pop r11
-    pop r10
-    pop r9
-    pop r8
-    pop rdx
-    pop rcx
-    pop rax
-    popfq
-    %pop ; IS_REG
-    sasmMacroFuncE
-%endmacro
-
-; size data baseformatletter ("d", "u", "x") signextendinst (movzx, movsx)
-%macro ___GET_NUM_COMMON 4.nolist
-    ___MAKE_FORMAT_STR %1, %3, %%fmt        
-    jmp %%after_data
-section .data
-    %%read_tmp dq 0
-    %%tmp dq 0
-section .text
-    %%after_data:
-    IS_GPR %2
-%if %$is_reg = 1
-; register
-    %ifidni %2, rsp
-        %error "Won't read to rsp!" 
-    %elifidni %2, esp
-        %error "Won't read to esp!" 
-    %elifidni %2, sp
-        %error "Won't read to sp!"
-    %elifidni %2, spl
-        %error "Won't read to sp!" 
-    %endif
-    %if %$reg_size < %1
-        %error "Too small register for requested data"
-    %endif
-; we will have to do postprocessing after scanf
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    mov rsi, %%read_tmp
-    ALIGN_STACK
-%elifid %2
-; variable (hope so)
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    mov rsi, %2
-    ALIGN_STACK
-%elifnum %2
-    %error "Incorrect parameter (number)"
-%elifstr %2
-    %error "Incorrect parameter (string)"
-%else
-; may be, address expression?
-    mov qword[%%tmp], rax
-    lea rax, %2
-    pushfq
-    push qword[%%tmp] ;rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    ALIGN_STACK
-    mov rsi, rax
-%endif
-    mov rdi, %%fmt
-    call scanf
-    UNALIGN_STACK
-    pop rdi
-    pop rsi
-    pop r11
-    pop r10
-    pop r9
-    pop r8
-    pop rdx
-    pop rcx
-    pop rax
-    popfq
-%if %$is_reg = 1
-    ; register postprocessing
-    %if %$reg_size = %1
-        mov %2, [%%read_tmp]
-    %else ; extend bytes 1 -> 2, 1 -> 4, 1 -> 8, 2 -> 4, 2 -> 8, 4 -> 8
-        %if %1 = 1
-            %4 %2, byte [%%read_tmp]
-        %elif %1 = 2
-            %4 %2, word [%%read_tmp]
-        %else ; 4
-            movsx %2, dword [%%read_tmp]
-            %ifidni %4, movzx
-                pushfq
-                shl %2, 32
-                shr %2, 32
-                popfq
-            %endif
-        %endif
-    %endif
-%endif
-    %pop ; IS_REG
-%endmacro
-
-%macro GET_HEX 2.nolist
-    sasmMacroFunc
-    ___GET_NUM_COMMON %1, %2, "x", movzx
-    sasmMacroFuncE
-%endmacro
-
-%macro GET_DEC 2.nolist
-    sasmMacroFunc
-    ___GET_NUM_COMMON %1, %2, "d", movsx
-    sasmMacroFuncE
-%endmacro
-
-%macro GET_UDEC 2.nolist
-    sasmMacroFunc
-    ___GET_NUM_COMMON %1, %2, "u", movzx
-    sasmMacroFuncE
-%endmacro
-
-
-%macro GET_CHAR 1.nolist
-    sasmMacroFunc
-    jmp %%after_data
-section .data
-    %%fmt db "%c", 0
-    %%read_tmp db 0
-    %%tmp dq 0
-section .text
-%%after_data:
-    IS_GPR %1
-%if %$is_reg = 1
-; register
-    %ifidni %1, rsp
-        %error "Won't read to rsp!" 
-    %elifidni %1, esp
-        %error "Won't read to esp!" 
-    %elifidni %1, sp
-        %error "Won't read to sp!" 
-    %elifidni %1, spl
-        %error "Won't read to spl!" 
-    %endif
-; we will have to do postprocessing after scanf
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    mov rsi, %%read_tmp
-    ALIGN_STACK
-%elifid %1
-; variable (hope so)
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    mov rsi, %1
-    ALIGN_STACK    
-%elifnum %1
-    %error "Incorrect parameter (number)"
-%elifstr %1
-    %error "Incorrect parameter (string)"
-%else
-; may be, address expression?
-    mov qword[%%tmp], rax
-    lea rax, %1
-    pushfq
-    push qword[%%tmp] ;rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    ALIGN_STACK
-    mov rsi, rax
-%endif
-    mov rdi, %%fmt
-    call scanf
-    UNALIGN_STACK
-    pop rdi
-    pop rsi
-    pop r11
-    pop r10
-    pop r9
-    pop r8
-    pop rdx
-    pop rcx
-    pop rax
-    popfq
-%if %$is_reg = 1
-    ; register postprocessing
-    %if %$reg_size = 1
-        mov %1, byte [%%read_tmp]
-    %else ; zero extend bytes 1 -> 2, 1 -> 4, 1 -> 8
-        movzx %1, byte [%%read_tmp]
-    %endif
-%endif
-    %pop ; IS_REG
-    sasmMacroFuncE
-%endmacro
-
-%macro GET_STRING 2.nolist
-    sasmMacroFunc
-    IS_GPR %1
-    %if %$is_reg = 1
-        %error "Incorrect 1st parameter (register)"
-    %endif    
-    %pop ;IS_GPR
-    IS_GPR %2    
-    %if %$is_reg = 1
-        ;
-    %elifnum %2
-        %if %2 <= 0
-            %error "Second parameter must be positive"
-        %endif
-    %else
-        %error "Second parameter must be numeric constant or register"
-    %endif
-    %pop ;IS_GPR
-%ifid %1
-; variable (hope so)
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    ;count
-    IS_GPR %2
-    %if %$is_reg = 1 
-        %if %$reg_size = 1
-            movzx rsi, %2
-        %elif %$reg_size = 2
-            movzx rsi, %2
-        %elif %$reg_size = 4
-            movsx rsi, %2
-            pushfq
-            shl rsi, 32
-            shr rsi, 32
-            popfq
-        %else ; %$reg_size = 8
-            mov rsi, %2
-        %endif
-    %else
-        mov rsi, %2
-    %endif
-    %pop
-    mov rdi, %1
-    ALIGN_STACK
-    call get_stdin
-    mov rdx, rax
-%elifnum %1
-    %error "Incorrect 1st parameter (number)"
-%elifstr %1
-    %error "Incorrect 1st parameter (string)"
-%else
-; may be, address expression?
-    jmp %%after_data
-section .data
-    %%tmp dq 0
-section .text
-%%after_data:
-    mov qword[%%tmp], rbx
-    lea rbx, %1
-    pushfq
-    push rax
-    push rcx
-    push rdx
-    push r8
-    push r9
-    push r10
-    push r11
-    push rsi
-    push rdi
-    ;count
-    IS_GPR %2
-    %if %$is_reg = 1 
-        %if %$reg_size = 1
-            movzx rsi, %2
-        %elif %$reg_size = 2
-            movzx rsi, %2
-        %elif %$reg_size = 4
-            movsx rsi, %2
-            pushfq
-            shl rsi, 32
-            shr rsi, 32
-            popfq
-        %else ; %$reg_size = 8
-            mov rsi, %2
-        %endif
-    %else
-        mov rsi, %2
-    %endif
-    %pop
-    mov rdi, rbx
-    ALIGN_STACK
-    call get_stdin
-    mov rdx, rax
-    mov rbx, qword[%%tmp]
-%endif
-    call fgets
-    UNALIGN_STACK
-    pop rdi
-    pop rsi
-    pop r11
-    pop r10
-    pop r9
-    pop r8
-    pop rdx
-    pop rcx
-    pop rax
-    popfq
-    sasmMacroFuncE
-%endmacro
-%endif
diff --git a/Linux/share/sasm/keys.ini b/Linux/share/sasm/keys.ini
deleted file mode 100644
index 25a365c..0000000
--- a/Linux/share/sasm/keys.ini
+++ /dev/null
@@ -1,28 +0,0 @@
-[General]
-new=default
-open=default
-close=default
-save=default
-saveAs=default
-exit=Ctrl+Q
-find=default
-undo=default
-redo=default
-cut=default
-copy=default
-paste=default
-delete=default
-selectAll=default
-comment=Shift+Ctrl+A
-uncomment=Shift+Ctrl+Q
-deleteTab=Shift+Tab
-build=Ctrl+F9
-run=F9
-debug=F5
-continue=F5
-stepOver=F10
-stepInto=F11
-breakpoint=F8
-showRegisters=Ctrl+R
-showMemory=Ctrl+M
-help=default
diff --git a/Linux/share/sasm/sasm.png b/Linux/share/sasm/sasm.png
deleted file mode 100644
index a8fdd6a2014b9614cda34249851179981cc03ce1..0000000000000000000000000000000000000000
GIT binary patch
literal 0
HcmV?d00001

literal 17097
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
Ua*uPXLjV8(07*qoM6N<$f*}8cg8%>k

diff --git a/README.txt b/README.txt
index d998148..694a522 100644
--- a/README.txt
+++ b/README.txt
@@ -30,7 +30,7 @@ For running:
 Download sources and unpack their.
 Go to directory with their: "cd <path>"
 Further print commands:
-1) "qmake" (For installing in specific directory on Linux - print: "qmake PREFIX=<path>". By default SASM installs in "/usr/bin" and "usr/share")
+1) "qmake" (For installing in specific directory on Linux - print: "qmake PREFIX=<path>". By default SASM installs in "/usr/bin" and "/usr/share")
 2) "make" for Linux and "mingw32-make" for Windows.
 3) For Linux: "make install" (command "sasm" will open SASM) or run "sasm" from folder right away or put "sasm" executable file to folder "Linux" (from this folder you can run the program).
    For Windows: Put "sasm.exe" executable file to folder "Windows". From this folder you can run the program. Also you can run program right away from compilation folder.
diff --git a/SASM.pro b/SASM.pro
index 7aa7e04..2eea4e3 100644
--- a/SASM.pro
+++ b/SASM.pro
@@ -12,39 +12,37 @@ TARGET = sasm
 TEMPLATE = app
 
 isEmpty(PREFIX) {
- PREFIX = /usr
+    bsd {
+        PREFIX = /usr/local
+    } else {
+        PREFIX = /usr
+    }
 }
 
 BINDIR = $$PREFIX/bin
 DATADIR = $$PREFIX/share
 
-bsd {
-    binfile.files += sasm
-    binfile.files += BSD/bin/*
-    binfile.path = $$BINDIR
-    data.files += BSD/share/sasm/*
-    data.path = $$DATADIR/sasm/
-    shortcutfiles.files += BSD/share/applications/sasm.desktop
-    shortcutfiles.path = $$DATADIR/applications/
-    docfiles.files += BSD/share/doc/sasm/changelog.gz
-    docfiles.files += BSD/share/doc/sasm/copyright
-    docfiles.path = $$DATADIR/doc/sasm/
-} else {
+unix {
+    appdata.files = res/io.github.dman95.SASM.metainfo.xml
+    appdata.path = $$DATADIR/metainfo
+    desktop.files = res/io.github.dman95.SASM.desktop
+    desktop.path = $$DATADIR/applications
+    icons.files = res/app/icons/hicolor
+    icons.path = $$DATADIR/icons
+
     binfile.files += sasm
-    binfile.files += Linux/bin/*
     binfile.path = $$BINDIR
-    data.files += Linux/share/sasm/*
-    data.path = $$DATADIR/sasm/
-    shortcutfiles.files += Linux/share/applications/sasm.desktop
-    shortcutfiles.path = $$DATADIR/applications/
-    docfiles.files += Linux/share/doc/sasm/changelog.gz
-    docfiles.files += Linux/share/doc/sasm/copyright
-    docfiles.path = $$DATADIR/doc/sasm/
+    data.files += Unix/share/sasm
+    data.path = $$DATADIR
+    docfiles.files += Unix/share/doc
+    docfiles.path = $$DATADIR
 }
 
+INSTALLS += appdata
+INSTALLS += desktop
+INSTALLS += icons
 INSTALLS += binfile
 INSTALLS += data
-INSTALLS += shortcutfiles
 INSTALLS += docfiles
 
 include(singleapplication/qtsingleapplication.pri)
diff --git a/Linux/share/doc/sasm/changelog.gz b/Unix/share/doc/sasm/changelog.gz
similarity index 100%
rename from Linux/share/doc/sasm/changelog.gz
rename to Unix/share/doc/sasm/changelog.gz
diff --git a/BSD/share/doc/sasm/copyright b/Unix/share/doc/sasm/copyright
similarity index 100%
rename from BSD/share/doc/sasm/copyright
rename to Unix/share/doc/sasm/copyright
diff --git a/BSD/share/sasm/NASM/macro.c b/Unix/share/sasm/NASM/macro.c
similarity index 100%
rename from BSD/share/sasm/NASM/macro.c
rename to Unix/share/sasm/NASM/macro.c
diff --git a/BSD/share/sasm/Projects/FASMHello.asm b/Unix/share/sasm/Projects/FASMHello.asm
similarity index 100%
rename from BSD/share/sasm/Projects/FASMHello.asm
rename to Unix/share/sasm/Projects/FASMHello.asm
diff --git a/BSD/share/sasm/Projects/FASMHellox64.asm b/Unix/share/sasm/Projects/FASMHellox64.asm
similarity index 100%
rename from BSD/share/sasm/Projects/FASMHellox64.asm
rename to Unix/share/sasm/Projects/FASMHellox64.asm
diff --git a/BSD/share/sasm/Projects/GASHello.asm b/Unix/share/sasm/Projects/GASHello.asm
similarity index 100%
rename from BSD/share/sasm/Projects/GASHello.asm
rename to Unix/share/sasm/Projects/GASHello.asm
diff --git a/BSD/share/sasm/Projects/GASHellox64.asm b/Unix/share/sasm/Projects/GASHellox64.asm
similarity index 100%
rename from BSD/share/sasm/Projects/GASHellox64.asm
rename to Unix/share/sasm/Projects/GASHellox64.asm
diff --git a/BSD/share/sasm/Projects/NASMHello.asm b/Unix/share/sasm/Projects/NASMHello.asm
similarity index 100%
rename from BSD/share/sasm/Projects/NASMHello.asm
rename to Unix/share/sasm/Projects/NASMHello.asm
diff --git a/BSD/share/sasm/Projects/NASMHellox64.asm b/Unix/share/sasm/Projects/NASMHellox64.asm
similarity index 100%
rename from BSD/share/sasm/Projects/NASMHellox64.asm
rename to Unix/share/sasm/Projects/NASMHellox64.asm
diff --git a/BSD/share/sasm/include/io.inc b/Unix/share/sasm/include/io.inc
similarity index 100%
rename from BSD/share/sasm/include/io.inc
rename to Unix/share/sasm/include/io.inc
diff --git a/BSD/share/sasm/include/io64.inc b/Unix/share/sasm/include/io64.inc
similarity index 100%
rename from BSD/share/sasm/include/io64.inc
rename to Unix/share/sasm/include/io64.inc
diff --git a/BSD/share/sasm/keys.ini b/Unix/share/sasm/keys.ini
similarity index 100%
rename from BSD/share/sasm/keys.ini
rename to Unix/share/sasm/keys.ini
diff --git a/common.cpp b/common.cpp
index 8e4f648..e45c4d0 100644
--- a/common.cpp
+++ b/common.cpp
@@ -56,16 +56,6 @@ QString Common::applicationDataPath()
             appDir = QCoreApplication::applicationDirPath();
         }
         return appDir;
-    #elif defined(__FreeBSD__) || defined(__OpenBSD__) || defined( __NetBSD__) || defined(__DragonFly__)
-        QString path = QCoreApplication::applicationDirPath();
-        QString appDir = path.left(path.length() - 4) + QString("/share/sasm"); //replace /bin with /share/sasm
-        if (! QFile::exists(appDir)) {
-            appDir = QCoreApplication::applicationDirPath() + "/share/sasm";
-        }
-        if (! QFile::exists(appDir)) {
-            appDir = QCoreApplication::applicationDirPath() + "/BSD/share/sasm";
-        }
-        return appDir;
     #else
         QString path = QCoreApplication::applicationDirPath();
         QString appDir = path.left(path.length() - 4) + QString("/share/sasm"); //replace /bin with /share/sasm
@@ -73,7 +63,7 @@ QString Common::applicationDataPath()
             appDir = QCoreApplication::applicationDirPath() + "/share/sasm";
         }
         if (! QFile::exists(appDir)) {
-            appDir = QCoreApplication::applicationDirPath() + "/Linux/share/sasm";
+            appDir = QCoreApplication::applicationDirPath() + "/Unix/share/sasm";
         }
         return appDir;
     #endif
diff --git a/BSD/share/sasm/sasm.png b/res/app/icons/hicolor/128x128/apps/io.github.dman95.SASM.png
similarity index 100%
rename from BSD/share/sasm/sasm.png
rename to res/app/icons/hicolor/128x128/apps/io.github.dman95.SASM.png
diff --git a/Linux/share/applications/sasm.desktop b/res/io.github.dman95.SASM.desktop
similarity index 50%
rename from Linux/share/applications/sasm.desktop
rename to res/io.github.dman95.SASM.desktop
index 9743f36..4f6f859 100644
--- a/Linux/share/applications/sasm.desktop
+++ b/res/io.github.dman95.SASM.desktop
@@ -1,8 +1,8 @@
 [Desktop Entry]
 Name=SASM
 GenericName=SASM
-Comment=Simple crossplatform IDE for NASM, MASM, GAS and FASM assembly languages.
-Icon=/usr/share/sasm/sasm.png
+Comment=Simple cross-platform IDE for NASM, MASM, GAS and FASM assembly languages.
+Icon=io.github.dman95.SASM
 Exec=sasm
 Terminal=false
 Type=Application
diff --git a/res/io.github.dman95.SASM.metainfo.xml b/res/io.github.dman95.SASM.metainfo.xml
new file mode 100644
index 0000000..4a0bcd7
--- /dev/null
+++ b/res/io.github.dman95.SASM.metainfo.xml
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<component type="desktop-application">
+  <id>io.github.dman95.SASM</id>
+  
+  <name>SASM</name>
+  <summary>Simple cross-platform IDE for NASM, MASM, GAS and FASM assembly languages</summary>
+  <summary xml:lang="en">﻿SASM (SimpleASM) - простая кроссплатформенная среда разработки для языков ассемблера NASM, MASM, GAS, FASM с подсветкой синтаксиса и отладчиком</summary>
+  <metadata_license>CC0-1.0</metadata_license>
+  <project_license>GPL-3.0-or-later</project_license>
+  
+  <description>
+    <p>
+      SASM (SimpleASM) - simple Open Source cross-platform IDE for NASM, MASM, GAS, FASM assembly languages. SASM has syntax highlighting and debugger. The program works out of the box and is great for beginners to learn assembly language. SASM is translated into Russian, English, Turkish (thanks Ali Goren), Chinese (thanks Ahmed Zetao Yang), German (thanks Sebastian Fischer), Italian (thanks Carlo Dapor), Polish (thanks Krzysztof Rossa), Hebrew (thanks Elian Kamal), Spanish (thanks Mariano Cordoba). Licensed under the GNU GPL v3.0. Based on the Qt.
+    </p>
+  </description>
+  
+  <description xml:lang="ru">
+    <p>
+      SASM (SimpleASM) - простая кроссплатформенная среда разработки для языков ассемблера NASM, MASM, GAS, FASM с подсветкой синтаксиса и отладчиком. В SASM Вы можете легко разрабатывать и выполнять программы, написанные на языке ассемблера. Вводите код в форму и запускайте приложение. Программа работает "из коробки" и хорошо подойдет для начинающих изучать язык ассемблера. Основана на Qt. Распространяется по свободной лицензии GNU GPL v3.0.
+    </p>
+  </description>
+  
+  <url type="homepage">https://dman95.github.io</url>
+  <url type="help">https://github.com/Dman95/SASM/issues</url>
+  <launchable type="desktop-id">io.github.dman95.SASM.desktop</launchable>
+  <screenshots>
+    <screenshot type="default">
+      <image xml:lang="en">https://dman95.github.io/SASM/images/Screenshot3.png</image>
+    </screenshot>
+    <screenshot>
+      <image xml:lang="en">https://dman95.github.io/SASM/images/Screenshot4.png</image>
+    </screenshot>
+    <screenshot type="default">
+      <image xml:lang="ru">https://dman95.github.io/SASM/images/Screenshot1.png</image>
+    </screenshot>
+    <screenshot>
+      <image xml:lang="ru">https://dman95.github.io/SASM/images/Screenshot2.png</image>
+    </screenshot>
+  </screenshots>
+  <content_rating type="oars-1.1" />
+</component>
-- 
2.35.1

